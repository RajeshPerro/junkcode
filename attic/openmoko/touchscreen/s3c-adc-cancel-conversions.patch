s3c-adc-cancel-conversions.patch

From: Nelson Castillo <arhuaco@freaks-unidos.net>

Signed-off-by: Nelson Castillo <arhuaco@freaks-unidos.net>
---

 arch/arm/plat-s3c/include/plat/adc.h |   11 ++++++++++-
 arch/arm/plat-s3c24xx/adc.c          |    9 +++++----
 2 files changed, 15 insertions(+), 5 deletions(-)


diff --git a/arch/arm/plat-s3c/include/plat/adc.h b/arch/arm/plat-s3c/include/plat/adc.h
index 43df2a4..26fc4d5 100644
--- a/arch/arm/plat-s3c/include/plat/adc.h
+++ b/arch/arm/plat-s3c/include/plat/adc.h
@@ -19,9 +19,18 @@ struct s3c_adc_client;
 extern int s3c_adc_start(struct s3c_adc_client *client,
 			 unsigned int channel, unsigned int nr_samples);
 
+
+/*
+ * Register the ADC client.
+ *
+ * The conv callback has a return value. If it is non-zero, pending
+ * conversions scheduled with s3c_adc_start will be canceled.
+ */
+
 extern struct s3c_adc_client *s3c_adc_register(struct platform_device *pdev,
 					       void (*select)(unsigned selected),
-					       void (*conv)(unsigned d0, unsigned d1),
+					       int (*conv)(unsigned d0,
+							   unsigned d1),
 					       unsigned int is_ts);
 
 extern void s3c_adc_release(struct s3c_adc_client *client);
diff --git a/arch/arm/plat-s3c24xx/adc.c b/arch/arm/plat-s3c24xx/adc.c
index 9a5c767..4b4111d 100644
--- a/arch/arm/plat-s3c24xx/adc.c
+++ b/arch/arm/plat-s3c24xx/adc.c
@@ -45,7 +45,7 @@ struct s3c_adc_client {
 	unsigned char		 channel;
 
 	void	(*select_cb)(unsigned selected);
-	void	(*convert_cb)(unsigned val1, unsigned val2);
+	int	(*convert_cb)(unsigned val1, unsigned val2);
 };
 
 struct adc_device {
@@ -158,7 +158,7 @@ static void s3c_adc_default_select(unsigned select)
 
 struct s3c_adc_client *s3c_adc_register(struct platform_device *pdev,
 					void (*select)(unsigned int selected),
-					void (*conv)(unsigned d0, unsigned d1),
+					int (*conv)(unsigned d0, unsigned d1),
 					unsigned int is_ts)
 {
 	struct s3c_adc_client *client;
@@ -200,6 +200,7 @@ static irqreturn_t s3c_adc_irq(int irq, void *pw)
 	struct s3c_adc_client *client = adc->cur;
 	unsigned long flags;
 	unsigned data0, data1;
+	int ret;
 
 	if (!client) {
 		dev_warn(&adc->pdev->dev, "%s: no adc pending\n", __func__);
@@ -210,9 +211,9 @@ static irqreturn_t s3c_adc_irq(int irq, void *pw)
 	data1 = readl(adc->regs + S3C2410_ADCDAT1);
 	adc_dbg(adc, "read %d: 0x%04x, 0x%04x\n", client->nr_samples, data0, data1);
 
-	(client->convert_cb)(data0 & 0x3ff, data1 & 0x3ff);
+	ret = (client->convert_cb)(data0 & 0x3ff, data1 & 0x3ff);
 
-	if (--client->nr_samples > 0) {
+	if (!ret && --client->nr_samples > 0) {
 		/* fire another conversion for this */
 
 		client->select_cb(1);
